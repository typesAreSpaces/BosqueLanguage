typescript_files/util.ts:59:  // TOUPDATE: Add more `replace operations' if the IR syntax (names)
typescript_files/term_expr.ts:14:    // TOUPDATE: Add more reserved words from FStar
typescript_files/translator_bosque_fstar.ts:6:// PRIORITIES:
typescript_files/translator_bosque_fstar.ts:89:    // FIX: This is wrong, because these function should have
typescript_files/translator_bosque_fstar.ts:188:  // TOUPDATE: Add more types as needed
typescript_files/translator_bosque_fstar.ts:442:      case MIROpTag.MIRLoadFieldDefaultValue: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:465:      case MIROpTag.MIRAccessArgVariable: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:469:      case MIROpTag.MIRAccessLocalVariable: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:500:      case MIROpTag.MIRConstructorPrimaryCollectionEmpty: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:526:      case MIROpTag.MIRConstructorPrimaryCollectionCopies: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:530:      case MIROpTag.MIRConstructorPrimaryCollectionMixed: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:696:      case MIROpTag.MIRProjectFromTypeTuple: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:700:      case MIROpTag.MIRProjectFromTypeRecord: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:704:      case MIROpTag.MIRProjectFromTypeConcept: { // IMPLEMET:
typescript_files/translator_bosque_fstar.ts:723:      case MIROpTag.MIRModifyWithIndecies: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:727:      case MIROpTag.MIRModifyWithProperties: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:731:      case MIROpTag.MIRModifyWithFields: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:744:      case MIROpTag.MIRStructuredExtendTuple: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:748:      case MIROpTag.MIRStructuredExtendRecord: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:752:      case MIROpTag.MIRStructuredExtendObject: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:770:        // case MIROpTag.MIRCallLambda: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:808:        // Q: Is still necessary to check if the type is either
typescript_files/translator_bosque_fstar.ts:810:        // A: Yes, because that will tell which `operation code` should be used
typescript_files/translator_bosque_fstar.ts:811:        // TODO: Implement the above
typescript_files/translator_bosque_fstar.ts:825:      case MIROpTag.MIRRegAssign: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:829:      case MIROpTag.MIRTruthyConvert: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:855:      case MIROpTag.MIRAbort: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:860:      case MIROpTag.MIRDebug: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:941:      case MIROpTag.MIRIsTypeOf: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:945:        // PRIORITY:
typescript_files/translator_bosque_fstar.ts:946:      case MIROpTag.MIRAccessConstantValue: { // IMPLEMENT:
typescript_files/translator_bosque_fstar.ts:1136:    // TODO: Figure out how to include the following fields:
typescript_files/bosqueTermsFST.ts:264:      // TODO: Include case for Strings\n\
typescript_files/bosqueTypesFST.ts:10:// TODO: Include parameter to print extended types
typescript_files/bosqueTypesFST.ts:44:  // FIX: The following are incomplete\n\
