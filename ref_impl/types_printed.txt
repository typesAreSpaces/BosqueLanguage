NSCore::String<T=NSMain::PlayerMark>
Map {
  'string_testNSMain__main' => TypedStringType { ty: AnyType {} },
  'nNSMain__main' => NoneType {},
  '__tmp_3NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  'xTuple2NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  '__tmp_19NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  '__tmp_6NSMain__main' => TupleType {
    isOpen: false,
    elements:
     [ IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       [TupleType],
       [TypedStringType],
       BoolType {},
       BoolType {} ],
    types:
     '(SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons (BTypeStringType BAnyType) (SCons BBoolType (SCons BBoolType SNil))))))))))))))))' },
  'x2NSMain__main' => TupleType {
    isOpen: false,
    elements:
     [ IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       [TupleType],
       [TypedStringType],
       BoolType {},
       BoolType {} ],
    types:
     '(SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons (BTypeStringType BAnyType) (SCons BBoolType (SCons BBoolType SNil))))))))))))))))' },
  '__tmp_25NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'xRecordNSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  '__tmp_31NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'xRecord2NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'yNSMain__main' => IntType {},
  'xNSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '__ir_ret__NSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '_return_NSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' } }
Map {
  'string_testNSMain__main' => TypedStringType { ty: AnyType {} },
  'nNSMain__main' => NoneType {},
  '__tmp_3NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  'xTuple2NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  '__tmp_19NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  '__tmp_6NSMain__main' => TupleType {
    isOpen: false,
    elements:
     [ IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       [TupleType],
       [TypedStringType],
       BoolType {},
       BoolType {} ],
    types:
     '(SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons (BTypeStringType BAnyType) (SCons BBoolType (SCons BBoolType SNil))))))))))))))))' },
  'x2NSMain__main' => TupleType {
    isOpen: false,
    elements:
     [ IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       [TupleType],
       [TypedStringType],
       BoolType {},
       BoolType {} ],
    types:
     '(SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons (BTypeStringType BAnyType) (SCons BBoolType (SCons BBoolType SNil))))))))))))))))' },
  '__tmp_25NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'xRecordNSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  '__tmp_31NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'xRecord2NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'yNSMain__main' => IntType {},
  'xNSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '__ir_ret__NSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '_return_NSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '__tmp_38NSMain__main' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  'y2NSMain__main' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  'xNSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  'yNSMain__max' => IntType {},
  '__ir_ret___2NSMain__max' => IntType {},
  '__ir_ret___3NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '_return_NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '__ir_ret___1NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '__ir_ret__NSMain__max' => IntType {},
  '__tmp_4NSMain__max' => BoolType {},
  '__tmp_0NSMain__max' => BoolType {} }
Map {
  'string_testNSMain__main' => TypedStringType { ty: AnyType {} },
  'nNSMain__main' => NoneType {},
  '__tmp_3NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  'xTuple2NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  '__tmp_19NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  '__tmp_6NSMain__main' => TupleType {
    isOpen: false,
    elements:
     [ IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       [TupleType],
       [TypedStringType],
       BoolType {},
       BoolType {} ],
    types:
     '(SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons (BTypeStringType BAnyType) (SCons BBoolType (SCons BBoolType SNil))))))))))))))))' },
  'x2NSMain__main' => TupleType {
    isOpen: false,
    elements:
     [ IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       [TupleType],
       [TypedStringType],
       BoolType {},
       BoolType {} ],
    types:
     '(SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons (BTypeStringType BAnyType) (SCons BBoolType (SCons BBoolType SNil))))))))))))))))' },
  '__tmp_25NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'xRecordNSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  '__tmp_31NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'xRecord2NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'yNSMain__main' => IntType {},
  'xNSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '__ir_ret__NSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '_return_NSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '__tmp_38NSMain__main' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  'y2NSMain__main' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  'xNSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  'yNSMain__max' => IntType {},
  '__ir_ret___2NSMain__max' => IntType {},
  '__ir_ret___3NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '_return_NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '__ir_ret___1NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '__ir_ret__NSMain__max' => IntType {},
  '__tmp_4NSMain__max' => BoolType {},
  '__tmp_0NSMain__max' => BoolType {},
  '__tmp_40NSMain__main' => IntType {},
  'zNSMain__main' => IntType {} }
Map {
  'string_testNSMain__main' => TypedStringType { ty: AnyType {} },
  'nNSMain__main' => NoneType {},
  '__tmp_3NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  'xTuple2NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  '__tmp_19NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  '__tmp_6NSMain__main' => TupleType {
    isOpen: false,
    elements:
     [ IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       [TupleType],
       [TypedStringType],
       BoolType {},
       BoolType {} ],
    types:
     '(SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons (BTypeStringType BAnyType) (SCons BBoolType (SCons BBoolType SNil))))))))))))))))' },
  'x2NSMain__main' => TupleType {
    isOpen: false,
    elements:
     [ IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       [TupleType],
       [TypedStringType],
       BoolType {},
       BoolType {} ],
    types:
     '(SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons (BTypeStringType BAnyType) (SCons BBoolType (SCons BBoolType SNil))))))))))))))))' },
  '__tmp_25NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'xRecordNSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  '__tmp_31NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'xRecord2NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'yNSMain__main' => IntType {},
  'xNSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '__ir_ret__NSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '_return_NSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '__tmp_38NSMain__main' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  'y2NSMain__main' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  'xNSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  'yNSMain__max' => IntType {},
  '__ir_ret___2NSMain__max' => IntType {},
  '__ir_ret___3NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '_return_NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '__ir_ret___1NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '__ir_ret__NSMain__max' => IntType {},
  '__tmp_4NSMain__max' => BoolType {},
  '__tmp_0NSMain__max' => BoolType {},
  '__tmp_40NSMain__main' => IntType {},
  'zNSMain__main' => IntType {},
  '__tmp_45NSMain__main' => IntType {},
  'z_max_func_repeatedNSMain__main' => IntType {},
  '__tmp_49NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, BoolType {}, IntType {} ],
    types: '(SCons BIntType (SCons BBoolType (SCons BIntType SNil)))' },
  'xNSMain__identityTupleOptional' => UnionType {
    elements: Set { [TupleType], [TupleType] },
    types:
     '(BUnionType (BTupleType false 3 (SCons BIntType (SCons BBoolType (SCons BIntType SNil)))) (BTupleType true 4 (SCons BIntType (SCons BBoolType (SCons BIntType (SCons BBoolType SNil))))))' },
  '__ir_ret__NSMain__identityTupleOptional' => UnionType {
    elements: Set { [TupleType], [TupleType] },
    types:
     '(BUnionType (BTupleType false 3 (SCons BIntType (SCons BBoolType (SCons BIntType SNil)))) (BTupleType true 4 (SCons BIntType (SCons BBoolType (SCons BIntType (SCons BBoolType SNil))))))' },
  '_return_NSMain__identityTupleOptional' => UnionType {
    elements: Set { [TupleType], [TupleType] },
    types:
     '(BUnionType (BTupleType false 3 (SCons BIntType (SCons BBoolType (SCons BIntType SNil)))) (BTupleType true 4 (SCons BIntType (SCons BBoolType (SCons BIntType (SCons BBoolType SNil))))))' } }
Map {
  'string_testNSMain__main' => TypedStringType { ty: AnyType {} },
  'nNSMain__main' => NoneType {},
  '__tmp_3NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  'xTuple2NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  '__tmp_19NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  '__tmp_6NSMain__main' => TupleType {
    isOpen: false,
    elements:
     [ IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       [TupleType],
       [TypedStringType],
       BoolType {},
       BoolType {} ],
    types:
     '(SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons (BTypeStringType BAnyType) (SCons BBoolType (SCons BBoolType SNil))))))))))))))))' },
  'x2NSMain__main' => TupleType {
    isOpen: false,
    elements:
     [ IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       [TupleType],
       [TypedStringType],
       BoolType {},
       BoolType {} ],
    types:
     '(SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons (BTypeStringType BAnyType) (SCons BBoolType (SCons BBoolType SNil))))))))))))))))' },
  '__tmp_25NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'xRecordNSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  '__tmp_31NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'xRecord2NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'yNSMain__main' => IntType {},
  'xNSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '__ir_ret__NSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '_return_NSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '__tmp_38NSMain__main' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  'y2NSMain__main' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  'xNSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  'yNSMain__max' => IntType {},
  '__ir_ret___2NSMain__max' => IntType {},
  '__ir_ret___3NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '_return_NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '__ir_ret___1NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '__ir_ret__NSMain__max' => IntType {},
  '__tmp_4NSMain__max' => BoolType {},
  '__tmp_0NSMain__max' => BoolType {},
  '__tmp_40NSMain__main' => IntType {},
  'zNSMain__main' => IntType {},
  '__tmp_45NSMain__main' => IntType {},
  'z_max_func_repeatedNSMain__main' => IntType {},
  '__tmp_49NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, BoolType {}, IntType {} ],
    types: '(SCons BIntType (SCons BBoolType (SCons BIntType SNil)))' },
  'xNSMain__identityTupleOptional' => UnionType {
    elements: Set { [TupleType], [TupleType] },
    types:
     '(BUnionType (BTupleType false 3 (SCons BIntType (SCons BBoolType (SCons BIntType SNil)))) (BTupleType true 4 (SCons BIntType (SCons BBoolType (SCons BIntType (SCons BBoolType SNil))))))' },
  '__ir_ret__NSMain__identityTupleOptional' => UnionType {
    elements: Set { [TupleType], [TupleType] },
    types:
     '(BUnionType (BTupleType false 3 (SCons BIntType (SCons BBoolType (SCons BIntType SNil)))) (BTupleType true 4 (SCons BIntType (SCons BBoolType (SCons BIntType (SCons BBoolType SNil))))))' },
  '_return_NSMain__identityTupleOptional' => UnionType {
    elements: Set { [TupleType], [TupleType] },
    types:
     '(BUnionType (BTupleType false 3 (SCons BIntType (SCons BBoolType (SCons BIntType SNil)))) (BTupleType true 4 (SCons BIntType (SCons BBoolType (SCons BIntType (SCons BBoolType SNil))))))' },
  '__tmp_48NSMain__main' => UnionType {
    elements: Set { [TupleType], [TupleType] },
    types:
     '(BUnionType (BTupleType false 3 (SCons BIntType (SCons BBoolType (SCons BIntType SNil)))) (BTupleType true 4 (SCons BIntType (SCons BBoolType (SCons BIntType (SCons BBoolType SNil))))))' },
  'z2NSMain__main' => UnionType {
    elements: Set { [TupleType], [TupleType] },
    types:
     '(BUnionType (BTupleType false 3 (SCons BIntType (SCons BBoolType (SCons BIntType SNil)))) (BTupleType true 4 (SCons BIntType (SCons BBoolType (SCons BIntType (SCons BBoolType SNil))))))' },
  '__tmp_54NSMain__main' => TupleType {
    isOpen: false,
    elements: [ [TypedStringType] ],
    types: '(SCons (BTypeStringType BAnyType) SNil)' },
  'xNSMain__identityOpenTuple' => TupleType {
    isOpen: true,
    elements: [ [TypedStringType] ],
    types: '(SCons (BTypeStringType BAnyType) SNil)' },
  '__ir_ret__NSMain__identityOpenTuple' => TupleType {
    isOpen: true,
    elements: [ [TypedStringType] ],
    types: '(SCons (BTypeStringType BAnyType) SNil)' },
  '_return_NSMain__identityOpenTuple' => TupleType {
    isOpen: true,
    elements: [ [TypedStringType] ],
    types: '(SCons (BTypeStringType BAnyType) SNil)' } }
Map {
  'string_testNSMain__main' => TypedStringType { ty: AnyType {} },
  'nNSMain__main' => NoneType {},
  '__tmp_3NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  'xTuple2NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  '__tmp_19NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, IntType {} ],
    types: '(SCons BIntType (SCons BIntType SNil))' },
  '__tmp_6NSMain__main' => TupleType {
    isOpen: false,
    elements:
     [ IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       [TupleType],
       [TypedStringType],
       BoolType {},
       BoolType {} ],
    types:
     '(SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons (BTypeStringType BAnyType) (SCons BBoolType (SCons BBoolType SNil))))))))))))))))' },
  'x2NSMain__main' => TupleType {
    isOpen: false,
    elements:
     [ IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       IntType {},
       [TupleType],
       [TypedStringType],
       BoolType {},
       BoolType {} ],
    types:
     '(SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons BIntType (SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons (BTypeStringType BAnyType) (SCons BBoolType (SCons BBoolType SNil))))))))))))))))' },
  '__tmp_25NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'xRecordNSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  '__tmp_31NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'xRecord2NSMain__main' => RecordType { elements: [ [Array], [Array] ] },
  'yNSMain__main' => IntType {},
  'xNSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '__ir_ret__NSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '_return_NSMain__identityUnion' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  '__tmp_38NSMain__main' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  'y2NSMain__main' => UnionType {
    elements:
     Set { BoolType {}, IntType {}, NoneType {}, [TypedStringType] },
    types:
     '(BUnionType BBoolType (BUnionType BIntType (BUnionType BNoneType (BTypeStringType BAnyType))))' },
  'xNSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  'yNSMain__max' => IntType {},
  '__ir_ret___2NSMain__max' => IntType {},
  '__ir_ret___3NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '_return_NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '__ir_ret___1NSMain__max' => UnionType {
    elements: Set { IntType {}, NoneType {} },
    types: '(BUnionType BIntType BNoneType)' },
  '__ir_ret__NSMain__max' => IntType {},
  '__tmp_4NSMain__max' => BoolType {},
  '__tmp_0NSMain__max' => BoolType {},
  '__tmp_40NSMain__main' => IntType {},
  'zNSMain__main' => IntType {},
  '__tmp_45NSMain__main' => IntType {},
  'z_max_func_repeatedNSMain__main' => IntType {},
  '__tmp_49NSMain__main' => TupleType {
    isOpen: false,
    elements: [ IntType {}, BoolType {}, IntType {} ],
    types: '(SCons BIntType (SCons BBoolType (SCons BIntType SNil)))' },
  'xNSMain__identityTupleOptional' => UnionType {
    elements: Set { [TupleType], [TupleType] },
    types:
     '(BUnionType (BTupleType false 3 (SCons BIntType (SCons BBoolType (SCons BIntType SNil)))) (BTupleType true 4 (SCons BIntType (SCons BBoolType (SCons BIntType (SCons BBoolType SNil))))))' },
  '__ir_ret__NSMain__identityTupleOptional' => UnionType {
    elements: Set { [TupleType], [TupleType] },
    types:
     '(BUnionType (BTupleType false 3 (SCons BIntType (SCons BBoolType (SCons BIntType SNil)))) (BTupleType true 4 (SCons BIntType (SCons BBoolType (SCons BIntType (SCons BBoolType SNil))))))' },
  '_return_NSMain__identityTupleOptional' => UnionType {
    elements: Set { [TupleType], [TupleType] },
    types:
     '(BUnionType (BTupleType false 3 (SCons BIntType (SCons BBoolType (SCons BIntType SNil)))) (BTupleType true 4 (SCons BIntType (SCons BBoolType (SCons BIntType (SCons BBoolType SNil))))))' },
  '__tmp_48NSMain__main' => UnionType {
    elements: Set { [TupleType], [TupleType] },
    types:
     '(BUnionType (BTupleType false 3 (SCons BIntType (SCons BBoolType (SCons BIntType SNil)))) (BTupleType true 4 (SCons BIntType (SCons BBoolType (SCons BIntType (SCons BBoolType SNil))))))' },
  'z2NSMain__main' => UnionType {
    elements: Set { [TupleType], [TupleType] },
    types:
     '(BUnionType (BTupleType false 3 (SCons BIntType (SCons BBoolType (SCons BIntType SNil)))) (BTupleType true 4 (SCons BIntType (SCons BBoolType (SCons BIntType (SCons BBoolType SNil))))))' },
  '__tmp_54NSMain__main' => TupleType {
    isOpen: false,
    elements: [ [TypedStringType] ],
    types: '(SCons (BTypeStringType BAnyType) SNil)' },
  'xNSMain__identityOpenTuple' => TupleType {
    isOpen: true,
    elements: [ [TypedStringType] ],
    types: '(SCons (BTypeStringType BAnyType) SNil)' },
  '__ir_ret__NSMain__identityOpenTuple' => TupleType {
    isOpen: true,
    elements: [ [TypedStringType] ],
    types: '(SCons (BTypeStringType BAnyType) SNil)' },
  '_return_NSMain__identityOpenTuple' => TupleType {
    isOpen: true,
    elements: [ [TypedStringType] ],
    types: '(SCons (BTypeStringType BAnyType) SNil)' },
  '__tmp_53NSMain__main' => TupleType {
    isOpen: true,
    elements: [ [TypedStringType] ],
    types: '(SCons (BTypeStringType BAnyType) SNil)' },
  'z3NSMain__main' => TupleType {
    isOpen: true,
    elements: [ [TypedStringType] ],
    types: '(SCons (BTypeStringType BAnyType) SNil)' },
  '__tmp_56NSMain__main' => TupleType {
    isOpen: false,
    elements: [ [TupleType], IntType {} ],
    types:
     '(SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons BIntType SNil))' },
  'zTuple2NSMain__main' => TupleType {
    isOpen: false,
    elements: [ [TupleType], IntType {} ],
    types:
     '(SCons (BTupleType false 2 (SCons BIntType (SCons BIntType SNil))) (SCons BIntType SNil))' },
  '__ir_ret__NSMain__main' => IntType {},
  '_return_NSMain__main' => IntType {} }
