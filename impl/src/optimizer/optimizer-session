let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/GithubProjects/BosqueLanguage/impl/src/optimizer
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +8 run_optimizer.ts
badd +2699 ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_ops.ts
badd +15 ~/Documents/GithubProjects/BosqueLanguage/impl/src/test/tests/optimizer/simple_test.bsq
badd +42 ~/Documents/GithubProjects/BosqueLanguage/impl/src/verifier/typescript_files/util.ts
badd +102 ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts
badd +59 ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_cleanup.ts
badd +49 ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_vartype.ts
badd +65 ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_ssa.ts
badd +695 ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_emitter.ts
badd +273 ~/Documents/GithubProjects/BosqueLanguage/impl/src/ast/assembly.ts
badd +54 masm_optimizer.ts
argglobal
%argdel
$argadd run_optimizer.ts
edit ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
2wincmd k
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd w
wincmd w
wincmd w
wincmd w
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 19 + 30) / 60)
exe 'vert 1resize ' . ((&columns * 52 + 157) / 315)
exe '2resize ' . ((&lines * 19 + 30) / 60)
exe 'vert 2resize ' . ((&columns * 51 + 157) / 315)
exe '3resize ' . ((&lines * 19 + 30) / 60)
exe 'vert 3resize ' . ((&columns * 52 + 157) / 315)
exe '4resize ' . ((&lines * 18 + 30) / 60)
exe 'vert 4resize ' . ((&columns * 157 + 157) / 315)
exe '5resize ' . ((&lines * 19 + 30) / 60)
exe 'vert 5resize ' . ((&columns * 157 + 157) / 315)
exe 'vert 6resize ' . ((&columns * 52 + 157) / 315)
exe '7resize ' . ((&lines * 29 + 30) / 60)
exe 'vert 7resize ' . ((&columns * 52 + 157) / 315)
exe '8resize ' . ((&lines * 29 + 30) / 60)
exe 'vert 8resize ' . ((&columns * 51 + 157) / 315)
exe '9resize ' . ((&lines * 28 + 30) / 60)
exe 'vert 9resize ' . ((&columns * 104 + 157) / 315)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 566 - ((7 * winheight(0) + 9) / 19)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
566
normal! 049|
wincmd w
argglobal
if bufexists("~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts") | buffer ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts | else | edit ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 160 - ((7 * winheight(0) + 9) / 19)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
160
normal! 017|
wincmd w
argglobal
if bufexists("~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts") | buffer ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts | else | edit ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 99 - ((0 * winheight(0) + 9) / 19)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
99
normal! 016|
wincmd w
argglobal
if bufexists("~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_ops.ts") | buffer ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_ops.ts | else | edit ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_ops.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 2699 - ((8 * winheight(0) + 9) / 18)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
2699
normal! 03|
wincmd w
argglobal
if bufexists("masm_optimizer.ts") | buffer masm_optimizer.ts | else | edit masm_optimizer.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 65 - ((5 * winheight(0) + 9) / 19)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
65
normal! 065|
wincmd w
argglobal
if bufexists("~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts") | buffer ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts | else | edit ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 857 - ((0 * winheight(0) + 29) / 58)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
857
normal! 0
wincmd w
argglobal
if bufexists("~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_ops.ts") | buffer ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_ops.ts | else | edit ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_ops.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 2699 - ((0 * winheight(0) + 14) / 29)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
2699
normal! 08|
wincmd w
argglobal
if bufexists("~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_ops.ts") | buffer ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_ops.ts | else | edit ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_ops.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1794 - ((0 * winheight(0) + 14) / 29)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1794
normal! 010|
wincmd w
argglobal
if bufexists("~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts") | buffer ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts | else | edit ~/Documents/GithubProjects/BosqueLanguage/impl/src/compiler/mir_assembly.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 172 - ((0 * winheight(0) + 14) / 28)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
172
normal! 05|
wincmd w
5wincmd w
exe '1resize ' . ((&lines * 19 + 30) / 60)
exe 'vert 1resize ' . ((&columns * 52 + 157) / 315)
exe '2resize ' . ((&lines * 19 + 30) / 60)
exe 'vert 2resize ' . ((&columns * 51 + 157) / 315)
exe '3resize ' . ((&lines * 19 + 30) / 60)
exe 'vert 3resize ' . ((&columns * 52 + 157) / 315)
exe '4resize ' . ((&lines * 18 + 30) / 60)
exe 'vert 4resize ' . ((&columns * 157 + 157) / 315)
exe '5resize ' . ((&lines * 19 + 30) / 60)
exe 'vert 5resize ' . ((&columns * 157 + 157) / 315)
exe 'vert 6resize ' . ((&columns * 52 + 157) / 315)
exe '7resize ' . ((&lines * 29 + 30) / 60)
exe 'vert 7resize ' . ((&columns * 52 + 157) / 315)
exe '8resize ' . ((&lines * 29 + 30) / 60)
exe 'vert 8resize ' . ((&columns * 51 + 157) / 315)
exe '9resize ' . ((&lines * 28 + 30) / 60)
exe 'vert 9resize ' . ((&columns * 104 + 157) / 315)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFIc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
