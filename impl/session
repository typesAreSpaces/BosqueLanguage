let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/GithubProjects/BosqueLanguage/impl
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +2808 src/tooling/bmc/smtbody_emitter.ts
badd +98 src/runtimes/symtest/symtest.ts
badd +1 src/compiler/mir_assembly.ts
badd +149 src/core/verify/list.bsq
badd +136 src/core/verify/core.bsq
badd +184 src/tooling/bmc/smttype_emitter.ts
badd +308 node_modules/@types/node/child_process.d.ts
badd +43 src/tooling/bmc/smtdecls_emitter.ts
badd +1 bin/tooling/bmc/smt_exp.js
badd +47 src/tooling/bmc/smt_exp.ts
badd +8 src/core/cpp/core.bsq
badd +18 src/core/cpp/list.bsq
badd +1 level_verification.ts
badd +288 src/tooling/bmc/runtime/smtruntime.smt2
badd +2 what
argglobal
%argdel
edit src/compiler/mir_assembly.ts
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 125 + 188) / 376)
exe 'vert 2resize ' . ((&columns * 125 + 188) / 376)
exe 'vert 3resize ' . ((&columns * 124 + 188) / 376)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 200 - ((0 * winheight(0) + 47) / 95)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
200
normal! 03|
wincmd w
argglobal
if bufexists("src/tooling/bmc/smtbody_emitter.ts") | buffer src/tooling/bmc/smtbody_emitter.ts | else | edit src/tooling/bmc/smtbody_emitter.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 2729 - ((94 * winheight(0) + 47) / 95)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
2729
normal! 014|
wincmd w
argglobal
if bufexists("src/core/verify/list.bsq") | buffer src/core/verify/list.bsq | else | edit src/core/verify/list.bsq | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 22 - ((21 * winheight(0) + 47) / 95)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
22
normal! 053|
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 125 + 188) / 376)
exe 'vert 2resize ' . ((&columns * 125 + 188) / 376)
exe 'vert 3resize ' . ((&columns * 124 + 188) / 376)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFIc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
