let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/GithubProjects/BosqueLanguage/impl
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1964 src/tooling/bmc/smtbody_emitter.ts
badd +45 src/tooling/bmc/smtdecls_emitter.ts
badd +716 src/tooling/bmc/smttype_emitter.ts
badd +93 src/runtimes/symtest/symtest.ts
badd +1 src/compiler/mir_assembly.ts
badd +3 bin/core/verify/list.bsq
badd +0 src/core/verify/list.bsq
argglobal
%argdel
edit src/tooling/bmc/smtdecls_emitter.ts
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
3wincmd h
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
2wincmd k
wincmd w
wincmd w
wincmd w
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 21 + 33) / 67)
exe 'vert 1resize ' . ((&columns * 85 + 171) / 342)
exe '2resize ' . ((&lines * 21 + 33) / 67)
exe 'vert 2resize ' . ((&columns * 85 + 171) / 342)
exe '3resize ' . ((&lines * 21 + 33) / 67)
exe 'vert 3resize ' . ((&columns * 85 + 171) / 342)
exe 'vert 4resize ' . ((&columns * 85 + 171) / 342)
exe 'vert 5resize ' . ((&columns * 125 + 171) / 342)
exe 'vert 6resize ' . ((&columns * 44 + 171) / 342)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 45 - ((2 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
45
normal! 0
wincmd w
argglobal
if bufexists("src/tooling/bmc/smtbody_emitter.ts") | buffer src/tooling/bmc/smtbody_emitter.ts | else | edit src/tooling/bmc/smtbody_emitter.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1961 - ((0 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1961
normal! 016|
wincmd w
argglobal
if bufexists("src/core/verify/list.bsq") | buffer src/core/verify/list.bsq | else | edit src/core/verify/list.bsq | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 11 - ((10 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
11
normal! 041|
wincmd w
argglobal
if bufexists("src/tooling/bmc/smtbody_emitter.ts") | buffer src/tooling/bmc/smtbody_emitter.ts | else | edit src/tooling/bmc/smtbody_emitter.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 2021 - ((44 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
2021
normal! 028|
wincmd w
argglobal
if bufexists("src/tooling/bmc/smtbody_emitter.ts") | buffer src/tooling/bmc/smtbody_emitter.ts | else | edit src/tooling/bmc/smtbody_emitter.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1993 - ((30 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1993
normal! 03|
wincmd w
argglobal
if bufexists("src/compiler/mir_assembly.ts") | buffer src/compiler/mir_assembly.ts | else | edit src/compiler/mir_assembly.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 190 - ((29 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
190
normal! 016|
wincmd w
5wincmd w
exe '1resize ' . ((&lines * 21 + 33) / 67)
exe 'vert 1resize ' . ((&columns * 85 + 171) / 342)
exe '2resize ' . ((&lines * 21 + 33) / 67)
exe 'vert 2resize ' . ((&columns * 85 + 171) / 342)
exe '3resize ' . ((&lines * 21 + 33) / 67)
exe 'vert 3resize ' . ((&columns * 85 + 171) / 342)
exe 'vert 4resize ' . ((&columns * 85 + 171) / 342)
exe 'vert 5resize ' . ((&columns * 125 + 171) / 342)
exe 'vert 6resize ' . ((&columns * 44 + 171) / 342)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFIc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
